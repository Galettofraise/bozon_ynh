#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app="$app" --key=domain)
path_url=$(ynh_app_setting_get --app="$app" --key=path)
admin=$(ynh_app_setting_get --app="$app" --key=admin)
backup_core_only=$(ynh_app_setting_get --app="$app" --key=backup_core_only)
final_path=$(ynh_app_setting_get --app="$app" --key=final_path)
data_path=$(ynh_app_setting_get --app="$app" --key=data_path)
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If final_path doesn't exist, create it
if [ -z "$final_path" ]; then
	final_path="/var/www/$app"
	ynh_app_setting_set --app="$app" --key=final_path --value="$final_path"
fi
# If data_path doesn't exist, create it
if [ -z "$data_path" ]; then
	data_path="/home/yunohost.app/$app"
	ynh_app_setting_set --app="$app" --key=data_path --value="$data_path"
fi

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=3

if [ -f "/etc/yunohost/apps/$app/scripts/backup" ]; then
	ynh_backup_before_upgrade # Backup the current version of the app
	ynh_clean_setup () {
		ynh_restore_upgradebackup
	}
fi
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]; then	
	# download & unpack bozon
	ynh_script_progression --message="Setting up source files..." --weight=2
	## download source
	tmpdir=$(mktemp -d)
	ynh_setup_source --dest_dir="$tmpdir"
	## clean & copy files needed to final folder
	myynh_clean_source
	[ -e "$tmpdir/config.php" ] && ynh_secure_remove "$tmpdir/config.php"
	cp -a "$tmpdir/." "$final_path"
	ynh_secure_remove "$tmpdir"
	## set permissions
	#myynh_set_permissions
fi

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=1

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..."

ynh_add_fpm_config

#=================================================
# CLEAN PHP SESSIONS STORED IN /var/lib/phpx/sessions
#=================================================
ynh_script_progression --message="Cleaning php sessions stored..."

if [ -d "/usr/lib/php5" ]; then
	[ -x /usr/lib/php5/sessionclean ] && /usr/lib/php5/sessionclean
elif [ -d "/usr/lib/php" ]; then
	[ -x /usr/lib/php/sessionclean ] && /usr/lib/php/sessionclean
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
